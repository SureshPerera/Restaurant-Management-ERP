// <auto-generated />
using System;
using API.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250928090647_UpdateDirectBooking")]
    partial class UpdateDirectBooking
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Model.Administration.AgentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CreditLimit")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgentModels");
                });

            modelBuilder.Entity("API.Model.Administration.ExRateModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BuyingRate")
                        .HasColumnType("float");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SellingRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ExRateModel");
                });

            modelBuilder.Entity("API.Model.Administration.ExtraChargeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraChargeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RateLKR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RateUSD")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ExtraChargeModels");
                });

            modelBuilder.Entity("API.Model.Administration.PackageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccomadationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Basis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entitlemeal1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entitlemeal2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entitlemeal3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entitlemeal4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RoomRateAutumn")
                        .HasColumnType("float");

                    b.Property<double?>("RoomRateSpring")
                        .HasColumnType("float");

                    b.Property<double?>("RoomRateSummer")
                        .HasColumnType("float");

                    b.Property<double?>("RoomRateWinter")
                        .HasColumnType("float");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPackage1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPackage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPackage3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPackage4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackageModels");
                });

            modelBuilder.Entity("API.Model.Administration.RoomBookingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DirectBookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("RoomRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DirectBookingId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomBookingsModel");
                });

            modelBuilder.Entity("API.Model.Administration.RoomModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAvalable")
                        .HasColumnType("bit");

                    b.Property<string>("LastCleanedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastCleanedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaintainStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumOccupancy")
                        .HasColumnType("int");

                    b.Property<string>("RoomDisplayTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomFloor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomModels");
                });

            modelBuilder.Entity("API.Model.ClientManagemnet.AdvancePaymentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectBookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PayingAmount")
                        .HasColumnType("float");

                    b.Property<string>("PaymentTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectBookingId");

                    b.ToTable("AdvancePaymentModels");
                });

            modelBuilder.Entity("API.Model.ClientManagemnet.ClientModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CreditLimit")
                        .HasColumnType("float");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DathOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OpeningBalanace")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientModels");
                });

            modelBuilder.Entity("API.Model.Reservation.DirectBookingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CheckIn")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<bool?>("CheckOut")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<bool?>("Conformation")
                        .HasColumnType("bit");

                    b.Property<double?>("CreditLimit")
                        .HasColumnType("float");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DathOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("OpeningBalanace")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NIC")
                        .IsUnique();

                    b.ToTable("DirectBookingModels");
                });

            modelBuilder.Entity("API.Model.Reservation.OnlineBooking.OnlineBookingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CheckIn")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<bool?>("CheckOut")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<bool>("Conformation")
                        .HasColumnType("bit");

                    b.Property<double?>("CreditLimit")
                        .HasColumnType("float");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DathOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoOfAdults")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfChildren")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfRooms")
                        .HasColumnType("int");

                    b.Property<double?>("OpeningBalanace")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PramoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineBookingModels");
                });

            modelBuilder.Entity("API.Model.SmartSale_Billing.SmartSaleModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Discouunt")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandryItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalLKR")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SmartSaleModels");
                });

            modelBuilder.Entity("API.Model.UserManagement.UserManagementModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Administration")
                        .HasColumnType("bit");

                    b.Property<bool?>("AssetsManagement")
                        .HasColumnType("bit");

                    b.Property<bool?>("CheckInOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("ClientManagement")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<bool?>("DashBoard")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HouseKeeping")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhouse")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Reservation")
                        .HasColumnType("bit");

                    b.Property<bool?>("SmartSalling")
                        .HasColumnType("bit");

                    b.Property<bool?>("StockInventory")
                        .HasColumnType("bit");

                    b.Property<bool?>("UserManagements")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserManagementModels");
                });

            modelBuilder.Entity("API.Model.Administration.RoomBookingModel", b =>
                {
                    b.HasOne("API.Model.Reservation.DirectBookingModel", "DirectBooking")
                        .WithMany("RoomBookings")
                        .HasForeignKey("DirectBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Model.Administration.RoomModel", "Room")
                        .WithMany("RoomBookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DirectBooking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("API.Model.ClientManagemnet.AdvancePaymentModel", b =>
                {
                    b.HasOne("API.Model.Reservation.DirectBookingModel", "DirectBooking")
                        .WithMany()
                        .HasForeignKey("DirectBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DirectBooking");
                });

            modelBuilder.Entity("API.Model.Administration.RoomModel", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("API.Model.Reservation.DirectBookingModel", b =>
                {
                    b.Navigation("RoomBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
