@page "/directbookingmodels/delete"
@using Microsoft.EntityFrameworkCore
@using ERPResturentManagementServerAuth.Model.Reservation
@inject IDbContextFactory<ERPResturentManagementServerAuth.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>DirectBookingModel</h2>
    <hr />
    @if (directbookingmodel is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@directbookingmodel.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@directbookingmodel.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@directbookingmodel.PhoneNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DathOfBirth</dt>
            <dd class="col-sm-10">@directbookingmodel.DathOfBirth</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@directbookingmodel.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EmailAddress</dt>
            <dd class="col-sm-10">@directbookingmodel.EmailAddress</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">NIC</dt>
            <dd class="col-sm-10">@directbookingmodel.NIC</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreditLimit</dt>
            <dd class="col-sm-10">@directbookingmodel.CreditLimit</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">OpeningBalanace</dt>
            <dd class="col-sm-10">@directbookingmodel.OpeningBalanace</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CustomerTypeId</dt>
            <dd class="col-sm-10">@directbookingmodel.CustomerTypeId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Nationality</dt>
            <dd class="col-sm-10">@directbookingmodel.Nationality</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Remark</dt>
            <dd class="col-sm-10">@directbookingmodel.Remark</dd>
        </dl>
        <EditForm method="post" Model="directbookingmodel" OnValidSubmit="DeleteDirectBookingModel" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(directbookingmodel is null)">Delete</button> |
            <a href="/directbookingmodels">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private DirectBookingModel? directbookingmodel;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        directbookingmodel = await context.DirectBookingModel.FirstOrDefaultAsync(m => m.Id == Id);

        if (directbookingmodel is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteDirectBookingModel()
    {
        using var context = DbFactory.CreateDbContext();
        context.DirectBookingModel.Remove(directbookingmodel!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/directbookingmodels");
    }
}
