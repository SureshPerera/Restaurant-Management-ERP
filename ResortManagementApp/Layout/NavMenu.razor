@using MudBlazor
@inject NavigationManager Nav

<div class="dashboard-layout">

    <!-- Sidebar -->
    <aside class="sidebar @(_collapsed ? "collapsed" : "")"
           @onmouseover="() => _hovered = true" @onmouseout="() => _hovered = false">
        <div class="sidebar-header">
            <h3 class="@(_collapsed && !_hovered ? "collapsed-text" : "")">Solitary Green Resort</h3>
            <button class="toggle-btn" @onclick="ToggleSidebar">
                <span class="bi bi-list"></span>
            </button>
        </div>

        <nav class="nav-menu">
            @foreach (var item in navItems)
            {
                <a class="nav-item @(item.Href == activePage ? "active" : "")"
                   href="@item.Href"
                   @onclick="@(() => SetActive(item.Href))">
                    <div class="icon-circle">
                        <i class="@item.Icon"></i>
                    </div>
                    <span class="nav-text" style="display:@((_collapsed && !_hovered) ? "none" : "inline")">
                        @item.Text
                    </span>
                </a>
            }
        </nav>
    </aside>

    <!-- Main content -->
   @*  <main class="main-content">
        @Body
    </main> *@

</div>

<style>
    .dashboard-layout {
        display: flex;
        height: 100vh;
        font-family: 'Segoe UI', sans-serif;
        background-color: #fefae0;
    }

    /* Sidebar */
    .sidebar {
        width: 250px;
        background-color: #344E41;
        color: #fefae0;
        display: flex;
        flex-direction: column;
        transition: width 0.3s ease;
        box-shadow: 5px 0 20px rgba(0,0,0,0.2);
        position: relative;
    }

        .sidebar.collapsed {
            width: 70px;
        }

        /* Hover effect overrides collapsed */
        .sidebar:hover {
            width: 250px;
        }

    /* Sidebar Header */
    .sidebar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        font-weight: bold;
        font-size: 1.2rem;
        border-bottom: 1px solid rgba(255,255,255,0.2);
    }

    .toggle-btn {
        background: none;
        border: none;
        color: #fefae0;
        font-size: 1.5rem;
        cursor: pointer;
    }

    .collapsed-text {
        display: none;
    }

    /* Navigation Menu */
    .nav-menu {
        flex-grow: 1;
        padding: 1rem 0;
    }

    .nav-item {
        display: flex;
        align-items: center;
        padding: 0.7rem 1rem;
        margin: 0.3rem 0.5rem;
        border-radius: 12px;
        text-decoration: none;
        color: #fefae0;
        transition: all 0.3s ease;
    }

    .icon-circle {
        background-color: #588157;
        width: 45px;
        height: 45px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        margin-right: 1rem;
        font-size: 1.2rem;
        transition: background 0.3s, color 0.3s;
    }

    .nav-item:hover {
        background: linear-gradient(90deg, #588157, #344E41);
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }

        .nav-item:hover .icon-circle {
            background-color: #fefae0;
            color: #344E41;
        }

    .nav-item.active {
        background: linear-gradient(90deg, #fefae0, #588157);
        color: #344E41;
        font-weight: bold;
    }

        .nav-item.active .icon-circle {
            background-color: #344E41;
            color: #fefae0;
        }

    /* Hide text on collapsed */
    .sidebar.collapsed .nav-text {
        display: none;
    }

    /* Main content */
    .main-content {
        flex-grow: 1;
        padding: 2rem;
        overflow-y: auto;
        background-color: #fefae0;
    }
</style>

@code {
    private bool _collapsed = false;
    private bool _hovered = false;
    private string activePage = "/Reservations/Dashboard";

    private void ToggleSidebar() => _collapsed = !_collapsed;

    private void SetActive(string href)
    {
        activePage = href;
        Nav.NavigateTo(href);
    }

    private List<NavItem> navItems = new()
    {
        new NavItem{ Text="Dashboard", Href="/Reservations/Dashboard", Icon="bi bi-speedometer2" },
        new NavItem{ Text="Reservation", Href="/Reservations", Icon="bi bi-bag-plus-fill" },
        new NavItem{ Text="Check-In & Check-Out", Href="/Reservations/CheckInOut", Icon="bi bi-building-fill-check" },
        new NavItem{ Text="Inhouse", Href="/Reservations/Inhouse", Icon="bi bi-house-exclamation-fill" },
        new NavItem{ Text="House-Keeping", Href="/Reservations/HouseKeeping", Icon="bi bi-house-heart" },
        new NavItem{ Text="Smart Sales & Billing", Href="/SmartSalesBilling", Icon="bi bi-receipt-cutoff" },
        new NavItem{ Text="Administration", Href="/Administration", Icon="bi bi-file-earmark-person-fill" },
        new NavItem{ Text="Client Management", Href="/ClientManagement", Icon="bi bi-person-vcard" },
        new NavItem{ Text="User Management", Href="/UserManagement", Icon="bi bi-shield-lock" }
    };

    public class NavItem
    {
        public string Text { get; set; } = string.Empty;
        public string Href { get; set; } = string.Empty;
        public string Icon { get; set; } = string.Empty;
    }
}
