@page "/Reservations/AgentBooking/Create"
@using ResortManagementApp.Models.Administration.ManageAgents
@using ResortManagementApp.Models.Reservation.DTO
@using System.Text.Json.Nodes

@layout MainLayout
<div class="container">
	<div class="row justify-content-center">
		<div class="col-lg-8">
			<!-- Card -->
			<div class="card shadow-lg">
				<div class="card-header bg-primary text-center text-white">
					<h3>Register Agent</h3>
				</div>

				<div class="card-body" style="background-color: #F8F9FA; font-size: 15px;">
					<form class="row g-3">
						<!-- Agent Name -->
						<div class="col-12">
							<label class="form-label">Agent Name</label>
							<input class="form-control" @bind="Agent.AgentName" />
							<span class="text-danger">@Errors["AgentName"]?[0]</span>
						</div>

						<!-- Address -->
						<div class="col-12">
							<label class="form-label">Address</label>
							<textarea class="form-control" @bind="Agent.AgentAddress"></textarea>
							<span class="text-danger">@Errors["AgentAddress"]?[0]</span>
						</div>

						<!-- Contact Person -->
						<div class="col-12">
							<label class="form-label">Contact Person</label>
							<input class="form-control" @bind="Agent.ContactPerson" />
							<span class="text-danger">@Errors["ContactPerson"]?[0]</span>
						</div>

						<!-- Phone + Email -->
						<div class="col-md-6">
							<label class="form-label">Phone Number</label>
							<input type="number" class="form-control" @bind="Agent.Mobile" />
							<span class="text-danger">@Errors["Mobile"]?[0]</span>
						</div>
						<div class="col-md-6">
							<label class="form-label">Email Address</label>
							<input type="email" class="form-control" @bind="Agent.Email" />
							<span class="text-danger">@Errors["Email"]?[0]</span>
						</div>

						<!-- Fax + VAT Reg No -->
						<div class="col-md-6">
							<label class="form-label">Fax</label>
							<input type="number" class="form-control" @bind="Agent.Fax" />
							<span class="text-danger">@Errors["Fax"]?[0]</span>
						</div>
						<div class="col-md-6">
							<label class="form-label">VAT Reg No</label>
							<input type="text" class="form-control" @bind="Agent.VatRegNo" />
							<span class="text-danger">@Errors["VatRegNo"]?[0]</span>
						</div>

						<!-- Website + NIC -->
						<div class="col-md-6">
							<label class="form-label">Website</label>
							<input type="text" class="form-control" @bind="Agent.WebSite" />
							<span class="text-danger">@Errors["WebSite"]?[0]</span>
						</div>
						<div class="col-md-6">
							<label class="form-label">NIC Number</label>
							<input class="form-control" @bind="Agent.NIC" />
							<span class="text-danger">@Errors["NIC"]?[0]</span>
						</div>

						<!-- Credit Limit -->
						<div class="col-12">
							<label class="form-label">Credit Limit</label>
							<input type="number" class="form-control" @bind="Agent.CreditLimit" />
						</div>

						<!-- Buttons -->
						<div class="col-12 d-flex justify-content-center mt-3 gap-3">
							<button class="btn btn-success fw-bold" type="button" @onclick="SaveCustomer">Register</button>
							<button class="btn btn-warning fw-bold" type="reset">Clear</button>
							<a class="btn btn-primary fw-bold" href="/Reservations/AgentBooking">Back</a>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 60rem;
		font-weight: bold;
	}
</style>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	// public DirectBookinDTO directBookingDTO { set; get; } = new();
	public Agents Agent { get; set; } = new();

	public JsonNode Errors { set; get; } = new JsonObject();

	private async Task SaveCustomer(MouseEventArgs args)
	{
		try
		{
			var response = await http.PostAsJsonAsync("https://localhost:4000/api/Agent", Agent);
			if (response.IsSuccessStatusCode) { navManager.NavigateTo("/Reservations/AgentBooking"); }

			var strResponce = await response.Content.ReadAsStringAsync();
			Console.WriteLine("Json Response :" + strResponce);


			var jsonResponce = JsonNode.Parse(strResponce);
			Errors = jsonResponce?["errors"] ?? new JsonObject();
			StateHasChanged();
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
	}
}
