@page "/Reservations/Delete/{Id:guid}"
@using ResortManagementApp.Models.Reservation
@using ResortManagementApp.Models.Reservation.DTO
<div>
	<h3 class="mb-3">Delete Customer</h3>
	@if (directBookingModel == null)
	{
		<p><em>Loading customer details...</em></p>
	}
	<p>Are you sure you want to delete customer with Name  <strong>@directBookingModel?.FirstName @directBookingModel?.LastName</strong> </p>
	
	<button class="btn btn-danger" @onclick="DeleteCustomer">Delete</button>
	<a class="btn btn-secondary" href="/Reservations/DirectBooking">Cancel</a>
</div>

@inject HttpClient http
@inject NavigationManager navManager


@code {
	[Parameter]
	public Guid Id { get; set; }
	public DirectBookingModel? directBookingModel;
	public DirectBookinDTO directBookingDTO = new();

	protected override async Task OnInitializedAsync()
	{
		try
		{
			// Fetch the customer's info by ID
			 directBookingModel = await http.GetFromJsonAsync<DirectBookingModel>($"https://localhost:4000/api/DirectBooking/{Id}");
			
		}
		catch (Exception ex)
		{
			Console.WriteLine("Error loading customer: " + ex.Message);
		}
	}
	

	public async Task DeleteCustomer()
	{
		try
		{
			var responce = await http.DeleteFromJsonAsync<DirectBookingModel>($"https://localhost:4000/api/DirectBooking/{Id}");
			//directBookingDTO.LastName = responce?.LastName ?? "";
			navManager.NavigateTo("/Reservations/DirectBooking");
		}
		catch (Exception ex)
		{
			Console.WriteLine("Erro : " + ex.Message);
		}
	}
	
}
