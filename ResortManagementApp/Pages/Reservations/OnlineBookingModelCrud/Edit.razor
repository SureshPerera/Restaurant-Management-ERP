@page "/Reservations/OnlineBooking/Edit/{Id:guid}"
@using ResortManagementApp.Models.Reservation.DTO
@using System.Text.Json.Nodes
@using ResortManagementApp.Models.Reservation.OnlineBookingModel

@layout MainLayout
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Card -->
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-center text-white">
                    <h3>Register Customer</h3>
                </div>

                <div class="card-body" style="background-color: #A3B18A; font-weight: bold; font-size: 15px;">

                    <!-- Customer ID -->
                    <div class="mb-3">
                        <label class="form-label">Customer ID</label>
                        <input class="form-control" type="text" @bind="@Id" readonly style="background-color: antiquewhite;" />
                        <span class="text-danger">@Errors["CustomerId"]?[0]</span>
                    </div>

                    <!-- First + Last Name -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">First Name</label>
                            <input class="form-control" @bind="OnlineBookingDto.FirstName" />
                            <span class="text-danger">@Errors["FirstName"]?[0]</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Last Name</label>
                            <input class="form-control" @bind="OnlineBookingDto.LastName" />
                            <span class="text-danger">@Errors["LastName"]?[0]</span>
                        </div>
                    </div>

                    <!-- Address -->
                    <div class="mb-3">
                        <label class="form-label">Address</label>
                        <textarea class="form-control" @bind="OnlineBookingDto.Address"></textarea>
                        <span class="text-danger">@Errors["Address"]?[0]</span>
                    </div>

                    <!-- Phone + Email -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Phone Number</label>
                            <input type="number" class="form-control" @bind="OnlineBookingDto.PhoneNumber" />
                            <span class="text-danger">@Errors["PhoneNumber"]?[0]</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Email Address</label>
                            <input type="email" class="form-control" @bind="OnlineBookingDto.EmailAddress" />
                            <span class="text-danger">@Errors["EmailAddress"]?[0]</span>
                        </div>
                    </div>

                    <!-- NIC + DOB -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">NIC Number</label>
                            <input class="form-control" @bind="OnlineBookingDto.NIC" />
                            <span class="text-danger">@Errors["NIC"]?[0]</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Date of Birth</label>
                            <input type="date" class="form-control" @bind="OnlineBookingDto.DathOfBirth" />
                        </div>
                    </div>

                    <!-- Nationality + Credit Limit -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Nationality</label>
                            <input class="form-control" @bind="OnlineBookingDto.Nationality" />
                            <span class="text-danger">@Errors["Nationality"]?[0]</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Credit Limit</label>
                            <input type="number" class="form-control" @bind="OnlineBookingDto.CreditLimit" />
                        </div>
                    </div>

                    <!-- Remark -->
                    <div class="mb-3">
                        <label class="form-label">Remark</label>
                        <textarea class="form-control" @bind="OnlineBookingDto.Remark"></textarea>
                    </div>

                    <!-- Buttons -->
                    <div class="d-grid d-md-flex justify-content-md-end gap-2">
                        <button class="btn btn-success fw-bold" type="button" @onclick="UpdateCustomer">Edit Customer</button>
                        <button class="btn btn-warning fw-bold" type="reset">Clear</button>
                        <a class="btn btn-primary fw-bold" href="/Reservations/OnlineBooking">Back</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 60rem;
		font-weight: bold;
	}
</style>
@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid Id { get; set; }
	public OnlineBookingModel? OnlineBookingModel = new OnlineBookingModel();
	public OnlineBookingDto OnlineBookingDto = new();
	public JsonNode Errors { get; set; } = new JsonObject();
	private string? country;
	public List<string> CustomerType = new List<string>
	{
		"Local","Foreign"
	};

	public class GeoResult
	{
		public string? country_name { get; set; }
		public string? country_code { get; set; }
	}

	protected override async Task OnParametersSetAsync()
	{
		try
		{
			var result = await http.GetFromJsonAsync<GeoResult>("api/Geo/country");
			country = result?.country_name;

			OnlineBookingModel = await http.GetFromJsonAsync<OnlineBookingModel>($"https://localhost:4000/api/OnlineBooking/{Id}");
			OnlineBookingDto.FirstName = OnlineBookingModel.FirstName ?? "";
			OnlineBookingDto.LastName = OnlineBookingModel?.LastName ?? "";
			OnlineBookingDto.Address = OnlineBookingModel?.Address ?? "";
			OnlineBookingDto.PhoneNumber = OnlineBookingModel?.PhoneNumber ?? "";
			OnlineBookingDto.DathOfBirth = OnlineBookingModel?.DathOfBirth;
			OnlineBookingDto.NIC = OnlineBookingModel?.NIC ?? "";
			OnlineBookingDto.CreditLimit = OnlineBookingModel?.CreditLimit;
			OnlineBookingDto.OpeningBalanace = OnlineBookingModel?.OpeningBalanace;
			OnlineBookingDto.Nationality = country ?? "";
			OnlineBookingDto.Remark = OnlineBookingModel?.Remark ?? "";
			OnlineBookingDto.EmailAddress = OnlineBookingModel?.EmailAddress ?? "";
			Console.WriteLine("Succusfull");

		}
		catch (Exception ex)
		{
			Console.WriteLine("Exceptions : " + ex.StackTrace);
		}
	}
	protected async Task UpdateCustomer()
	{
		var responce = await http.PutAsJsonAsync($"https://localhost:4000/api/DirectBooking/{Id}", OnlineBookingDto);
		if (responce.IsSuccessStatusCode) { navManager.NavigateTo("/Reservations/OnlineBooking"); }

		var strResponce = await responce.Content.ReadAsStringAsync();
		try
		{
			var jsonResponce = JsonNode.Parse(strResponce);
			Errors = jsonResponce?["errors"] ?? new JsonObject();
		}
		catch (Exception ex)
		{
			Console.WriteLine("Erro Message : " + ex.Message);
		}
	}

}

