@page "/Administration/ManagePackages/Edit/{Id:guid}"

@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManagePackages
@using ResortManagementApp.Models.Reservation.DTO
@using ResortManagementApp.Models.Reservation
@using System.Text.Json.Nodes
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout
<div>
	<h3 class="card mb-3 text-center">Update Package</h3>
</div>
<div class="col-lg-8">
	<h1 class="mb-5">New Package</h1>
</div>

<form class="form flex-wrap" style="  background-color:antiquewhite; margin-left: 0.5rem;">
	@if (PackagesDto == null)
	{
		<p><Searching /></p>
	}
	<div class="row justify-content-around mb-3">
		<label class="col-md-4 col-form-label">Package Id</label>
		<div class="col-md-6" style="background-color:antiquewhite">
			<input class="form-control" type="text" @bind="@Id" readonly>
			<span class="text-danger">@Errors["PackageId"]?[0]</span>
		</div>
	</div>
	<div class="justify-content-around flex flex-wrap">
		<div class="">
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Package Name</label>
				<div class="col-md-6" style="background-color:antiquewhite">
					<input class="form-control" type="text" @bind="PackagesDto.PackageName">
					<span class="text-danger">@Errors["PackageName"]?[0]</span>
				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Package Details</label>
				<div class="col-md-6">
					<input class="form-control" type="text" @bind="PackagesDto.PackageDetails">
					<span class="text-danger">@Errors["PackageDetails"]?[0]</span>
				</div>
			</div>
			<div class="row mb-3">
				<label style="" class="col-md-3 col-form-label">Room Type</label>
				<div class="col-md-6">
					<input class="form-control" type="text" @bind="PackagesDto.RoomType">
					<span class="text-danger">@Errors["RoomType"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-2 col-form-label">Accomadation Type</label>
				<div style="margin-left:2.2rem;" class="col-md-6">
					<input class="form-control" type="text" @bind="PackagesDto.AccomadationType">
					<span class="text-danger">@Errors["AccomadationType"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-2 col-form-label">Basis</label>
				<div class="col-md-6" style="margin-left:2.2rem;">
					<select class="form-control" @bind="PackagesDto.Basis">
						<option class="" style="align-items: center">--Select--</option>
						@foreach (var item in BasisList)
						{
							<option>@item</option>
						}
					</select>

					<span class="text-danger">@Errors["Basis"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-2 col-form-label">Room Rate(Spring)</label>
				<div class="col-md-6" style="margin-left:2.2rem;">
					<input class="form-control" type="number" @bind="PackagesDto.RoomRateSpring">
					<span class="text-danger">@Errors["RoomRateSpring"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-2 col-form-label">Room Rate(Summer)</label>
				<div class="col-md-6" style="margin-left:2.2rem;">
					<input class="form-control" type="number" @bind="PackagesDto.RoomRateSummer">
					<span class="text-danger">@Errors["RoomRateSummer"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-2 col-form-label">Room Rate(Autuman)</label>
				<div class="col-md-6" style="margin-left:2.2rem;">
					<input class="form-control" type="number" @bind="PackagesDto.RoomRateAutumn">
					<span class="text-danger">@Errors["RoomRateAutumn"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-2 col-form-label">Room Rate(Winter)</label>
				<div class="col-md-6" style="margin-left:2.2rem;">
					<input class="form-control" type="number" @bind="PackagesDto.RoomRateWinter">
					<span class="text-danger">@Errors["RoomRateWinter"]?[0]</span>

				</div>
			</div>
		</div>
		<div class="">
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Entitle Meal 1</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.Entitlemeal1">
					<span class="text-danger">@Errors["Entitlemeal1"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Entitle Meal 2</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.Entitlemeal2">
					<span class="text-danger">@Errors["Entitlemeal2"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Entitle Meal 3</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.Entitlemeal3">
					<span class="text-danger">@Errors["Entitlemeal3"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Entitle Meal 4</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.Entitlemeal4">
					<span class="text-danger">@Errors["Entitlemeal4"]?[0]</span>

				</div>
			</div>

			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Special Package 1</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.SpecialPackage1">
				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Special Package 2</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.SpecialPackage2">
				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Special Package 3</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.SpecialPackage3">
				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Special Package 4</label>
				<div class="col-md-6 inp">
					<input class="form-control" type="text" @bind="PackagesDto.SpecialPackage4">
				</div>
			</div>

		</div>
		<div class="" style="display:flex; flex-direction: column; gap: 1rem;">

			<div class="offset-md-1 col-md-3 d-grid" style="">
				<button class="btn btn-success fw-bold" style="width:8rem;" type="button" @onclick="CreatePackage">Update</button>
			</div>
			<div class="offset-md-1 col-md-3 d-grid">
				<button class="btn btn-warning fw-bold" style="width:8rem;" type="reset">Clear</button>
			</div>
			<div class="offset-md-1 col-md-3 d-grid">
				<a class="btn btn-primary fw-bold" style="width:8rem;" href="/Administration/ManagePackages">Back</a>
			</div>
		</div>
	</div>




</form>



<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 80%;
		font-weight: bold;
		height: fit-content;
	}

	.inp {
		margin-left: 3rem;
	}
</style>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid Id { get; set; }
	public JsonNode Errors { get; set; } = new JsonObject();
	public Packages? Packages { get; set; }
	public PackagesDto? PackagesDto { get; set; } = new();
	public List<string> BasisList = new List<string>
	{
		"Room Only","B & B", "Half Board", "Full Board"
	};
	protected override async Task OnParametersSetAsync()
	{
		try
		{

			Packages = await http.GetFromJsonAsync<Packages>($"https://localhost:4000/api/Package/{Id}");
			PackagesDto.AccomadationType = Packages?.AccomadationType?? "";
			PackagesDto.Basis = Packages?.Basis?? "";
			PackagesDto.Entitlemeal1 = Packages?.Entitlemeal1 ?? "";
			PackagesDto.Entitlemeal2 = Packages?.Entitlemeal2 ?? "";
			PackagesDto.PackageName = Packages?.PackageName?? "";
			PackagesDto.PackageDetails = Packages?.PackageDetails ?? "";
			PackagesDto.Entitlemeal3 = Packages?.Entitlemeal3 ?? "";
			PackagesDto.Entitlemeal4 = Packages?.Entitlemeal4 ?? "";
			PackagesDto.RoomRateAutumn = Packages?.RoomRateAutumn ?? 0;
			PackagesDto.RoomRateSpring = Packages?.RoomRateSpring ?? 0;
			PackagesDto.RoomRateSummer = Packages?.RoomRateSummer ?? 0;
			PackagesDto.RoomRateWinter = Packages?.RoomRateWinter ?? 0;
			PackagesDto.RoomType = Packages?.RoomType ?? "";
			PackagesDto.SpecialPackage1 = Packages?.SpecialPackage1 ?? "";
			PackagesDto.SpecialPackage2 = Packages?.SpecialPackage2 ?? "";
			PackagesDto.SpecialPackage3 = Packages?.SpecialPackage3 ?? "";
			PackagesDto.SpecialPackage4 = Packages?.SpecialPackage4 ?? "";

			Console.WriteLine("Succusfull Loading...");
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exceptions : " + ex.StackTrace);
		}
	}
	private async Task CreatePackage(MouseEventArgs args)
	{
		try
		{
			var response = await http.PutAsJsonAsync(
				$"https://localhost:4000/api/Package/{Id}", PackagesDto);

			if (response.IsSuccessStatusCode)
			{
				navManager.NavigateTo("/Administration/ManagePackages");
			}
			else
			{
				var strResponse = await response.Content.ReadAsStringAsync();
				Console.WriteLine("Update failed: " + strResponse);

				try
				{
					var jsonResponse = JsonNode.Parse(strResponse);
					Errors = jsonResponse?["errors"] ?? new JsonObject();
				}
				catch
				{
					Errors = new JsonObject();
				}
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exception: " + ex.Message);
		}
	}
}

