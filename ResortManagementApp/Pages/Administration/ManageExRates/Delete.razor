@page "/Administration/ManageExRates/Delete/{Id:guid}"

@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageExRates
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout

<div>
	<h3 class="mb-3">Delete Agent</h3>
	@if (ExchangeRatesDto == null)
	{
		<p><Searching/></p>
	}
	<p>Are you sure you want to delete exchange with name  <strong>@Id</strong> </p>

	<button class="btn btn-danger" @onclick="DeletePackages">Delete</button>
	<a class="btn btn-secondary" href="/Administration/ManageExRates">Cancel</a>
</div>
@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid Id { get; set; }
	public ExchangeRates? ExchangeRates { get; set; }
	public ExchangeRatesDto? ExchangeRatesDto { get; set; } = new();
	private async Task DeletePackages(MouseEventArgs args)
	{
		try
		{
			try
			{
				var responce = await http.DeleteFromJsonAsync<PackagesDto>($"https://localhost:4000/api/ExtraModel/{Id}");

				navManager.NavigateTo("/Administration/ManageExRates");
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
			}

		}
		catch (Exception ex)
		{
			Console.WriteLine("Error : " + ex.Message);
		}
	}
	protected override async Task OnInitializedAsync()
	{
		try
		{
			// Fetch the customer's info by ID
			ExchangeRatesDto = await http.GetFromJsonAsync<ExchangeRatesDto>($"https://localhost:4000/api/ExtraModel/{Id}");

		}
		catch (Exception ex)
		{
			Console.WriteLine("Error loading customer: " + ex.Message);
		}
	}

}
