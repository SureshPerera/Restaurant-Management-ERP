@page "/Administration/ManageExRates/Delete/{Id:guid}"

@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageExRates
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout

<div class="container">
	<div class="row justify-content-center">
		<div class="col-lg-6">
			<!-- Card -->
			<div class="card shadow-lg">
				<div class="card-header bg-danger text-center text-white">
					<h3>Delete Exchange Rate</h3>
				</div>

				<div class="card-body" style="background-color: #F8F9FA; font-size: 15px;">
					@if (ExchangeRatesDto == null)
					{
						<p><Searching /></p>
					}
					else
					{
						<p>
							Are you sure you want to delete the exchange rate with name
							<strong>@Id</strong>?
						</p>

						<div class="d-grid d-md-flex justify-content-md-center mt-4 gap-2">
							<button class="btn btn-danger fw-bold" type="button" @onclick="DeletePackages">
								Delete
							</button>
							<a class="btn btn-secondary fw-bold" href="/Administration/ManageExRates">
								Cancel
							</a>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid Id { get; set; }
	public ExchangeRates? ExchangeRates { get; set; }
	public ExchangeRatesDto? ExchangeRatesDto { get; set; } = new();
	private async Task DeletePackages(MouseEventArgs args)
	{
		try
		{
			try
			{
				var responce = await http.DeleteFromJsonAsync<PackagesDto>($"https://localhost:4000/api/ExtraModel/{Id}");

				navManager.NavigateTo("/Administration/ManageExRates");
				StateHasChanged();

			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
			}

		}
		catch (Exception ex)
		{
			Console.WriteLine("Error : " + ex.Message);
		}
	}
	protected override async Task OnInitializedAsync()
	{
		try
		{
			// Fetch the customer's info by ID
			ExchangeRatesDto = await http.GetFromJsonAsync<ExchangeRatesDto>($"https://localhost:4000/api/ExtraModel/{Id}");
			StateHasChanged();

		}
		catch (Exception ex)
		{
			Console.WriteLine("Error loading customer: " + ex.Message);
		}
	}

}
