@page "/Administration/ManageExRates/Create"


@using System.Text.Json.Nodes
@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageExRates
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Card -->
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-center text-white">
                    <h3>Add New Exchange Rates</h3>
                </div>

                <div class="card-body" style="background-color: #F8F9FA; font-size: 15px;">
                    @if (ExchangeRatesDto == null)
                    {
                        <p><Searching /></p>
                    }
                    else
                    {
                        <form>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Currency Name</label>
                                        <input class="form-control" type="text" @bind="ExchangeRatesDto.CurrencyName" />
                                        <span class="text-danger">@Errors["CurrencyName"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Selling Rate</label>
                                        <input class="form-control" type="text" @bind="ExchangeRatesDto.SellingRate" />
                                        <span class="text-danger">@Errors["SellingRate"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Buying Rate</label>
                                        <input class="form-control" type="text" @bind="ExchangeRatesDto.BuyingRate" />
                                        <span class="text-danger">@Errors["BuyingRate"]?[0]</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-grid d-md-flex justify-content-md-center mt-4 gap-2">
                                <button class="btn btn-success fw-bold" type="button" @onclick="CreateExchangeRate">
                                    Add
                                </button>
                                <button class="btn btn-warning fw-bold" type="reset">
                                    Clear
                                </button>
                                <a class="btn btn-secondary fw-bold" href="/Administration/ManageExRates">
                                    Back
                                </a>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>




<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 80%;
		font-weight: bold;
		height: fit-content;
	}

	.inp {
		margin-left: 3rem;
	}
</style>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	public JsonNode Errors { get; set; } = new JsonObject();
	public ExchangeRates? ExchangeRates { get; set; }
	public ExchangeRatesDto ExchangeRatesDto { get; set; } = new();

	private async Task CreateExchangeRate(MouseEventArgs args)
	{
		var response = await http.PostAsJsonAsync("https://localhost:4000/api/ExtraModel", ExchangeRatesDto);
		if (response.IsSuccessStatusCode) { navManager.NavigateTo("/Administration/ManageExRates"); }

		var strResponce = await response.Content.ReadAsStringAsync();
		Console.WriteLine("Json Response :" + strResponce);

		try
		{
			var jsonResponce = JsonNode.Parse(strResponce);
			Errors = jsonResponce?["errors"] ?? new JsonObject();
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
	}
}

