@page "/Administration/ManageExRates/Create"


@using System.Text.Json.Nodes
@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageExRates
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout
<div>
	<h3 class="card mb-3 text-center">Add New Exchange Rates</h3>
</div>
<div class="col-lg-8">
	<h1 class="mb-5">New Exchange Rates</h1>
</div>

<form class="form flex-wrap" style="  background-color:antiquewhite; margin-left: 0.5rem;">
	@if (ExchangeRatesDto == null)
	{
		<p><Searching /></p>
	}
	
	<div class="justify-content-around flex flex-wrap">
		<div class="">
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Currency Name</label>
				<div class="col-md-6" style="background-color:antiquewhite">
					<input class="form-control" type="text" @bind="ExchangeRatesDto.CurrencyName">
					<span class="text-danger">@Errors["CurrencyName"]?[0]</span>
				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-3 col-form-label">Selling Rate</label>
				<div class="col-md-6">
					<input class="form-control" type="text" @bind="ExchangeRatesDto.SellingRate">
					<span class="text-danger">@Errors["SellingRate"]?[0]</span>
				</div>
			</div>
			<div class="row mb-3">
				<label style="" class="col-md-3 col-form-label">Room Type</label>
				<div class="col-md-6">
					<input class="form-control" type="text" @bind="ExchangeRatesDto.BuyingRate">
					<span class="text-danger">@Errors["BuyingRate"]?[0]</span>

				</div>
			</div>


		</div>
		<div class="" style="display:flex; flex-direction: column; gap: 1rem;">

			<div class="offset-md-1 col-md-3 d-grid" style="">
				<button class="btn btn-success fw-bold" style="width:8rem;" type="button" @onclick="CreateExchangeRate">Add</button>
			</div>
			<div class="offset-md-1 col-md-3 d-grid">
				<button class="btn btn-warning fw-bold" style="width:8rem;" type="reset">Clear</button>
			</div>
			<div class="offset-md-1 col-md-3 d-grid">
				<a class="btn btn-primary fw-bold" style="width:8rem;" href="/Administration/ManageExRates">Back</a>
			</div>
		</div>
	</div>




</form>



<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 80%;
		font-weight: bold;
		height: fit-content;
	}

	.inp {
		margin-left: 3rem;
	}
</style>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	public JsonNode Errors { get; set; } = new JsonObject();
	public ExchangeRates? ExchangeRates { get; set; }
	public ExchangeRatesDto ExchangeRatesDto { get; set; } = new();

	private async Task CreateExchangeRate(MouseEventArgs args)
	{
		var response = await http.PostAsJsonAsync("https://localhost:4000/api/ExtraModel", ExchangeRatesDto);
		if (response.IsSuccessStatusCode) { navManager.NavigateTo("/Administration/ManageExRates"); }

		var strResponce = await response.Content.ReadAsStringAsync();
		Console.WriteLine("Json Response :" + strResponce);

		try
		{
			var jsonResponce = JsonNode.Parse(strResponce);
			Errors = jsonResponce?["errors"] ?? new JsonObject();
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
	}
}

