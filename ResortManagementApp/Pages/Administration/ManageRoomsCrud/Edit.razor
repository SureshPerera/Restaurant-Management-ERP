@page "/Administration/ManageRooms/Edit/{Id:guid}"

@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageRooms
@using ResortManagementApp.Models.Reservation.DTO
@using ResortManagementApp.Models.Reservation
@using System.Text.Json.Nodes
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout
<div>
    <h3 class="card mb-3 text-center">Edit Customer</h3>
</div>
<div class="col-lg-8">
    <h1 class="mb-5">Edit Customer</h1>
</div>

<form class="row form" style="background-color: antiquewhite; margin-left: 0.5rem;">
    @if (ManageRooms == null)
    {
        <Searching />
    }

    <div class="justify-content-around flex flex-wrap">
        <!-- Left Column -->
        <div class="">
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Room Type</label>
                <div class="col-md-6">
                    <input class="form-control" type="text" @bind="RoomsDtos.RoomType" />
                    <span class="text-danger">@Errors["RoomType"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Room Floor</label>
                <div class="col-md-6">
                    <input class="form-control" type="number" @bind="RoomsDtos.RoomFloor" />
                    <span class="text-danger">@Errors["RoomFloor"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Room Status</label>
                <div class="col-md-6">
                    <textarea class="form-control" @bind="RoomsDtos.RoomStatus"></textarea>
                    <span class="text-danger">@Errors["RoomStatus"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Maintain Status</label>
                <div class="col-md-6">
                    <input class="form-control" type="text" @bind="RoomsDtos.MaintainStatus" />
                    <span class="text-danger">@Errors["MaintainStatus"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Maximum Occupancy</label>
                <div class="col-md-6">
                    <input class="form-control" type="number" @bind="RoomsDtos.MaximumOccupancy" />
                    <span class="text-danger">@Errors["MaximumOccupancy"]?[0]</span>
                </div>
            </div>
        </div>

        <!-- Right Column -->
        <div class="">
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Last Cleaned Date</label>
                <div class="col-md-6">
                    <input class="form-control" type="date" @bind="RoomsDtos.LastCleanedDate" />
                    <span class="text-danger">@Errors["LastCleanedDate"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Last Cleaned By</label>
                <div class="col-md-6">
                    <input class="form-control" type="text" @bind="RoomsDtos.LastCleanedBy" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Maintenance Comment</label>
                <div class="col-md-6">
                    <input class="form-control" type="text" @bind="RoomsDtos.MaintenanceComment" />
                    <span class="text-danger">@Errors["MaintenanceComment"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Additional Details</label>
                <div class="col-md-6">
                    <input class="form-control" type="text" @bind="RoomsDtos.AdditionalDetails" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Room Display Title</label>
                <div class="col-md-6">
                    <textarea class="form-control" @bind="RoomsDtos.RoomDisplayTitle"></textarea>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="d-flex flex-column gap-3">
            <div class="col-md-3 d-grid">
                <button class="btn btn-success fw-bold" type="button" @onclick="UpdateRooms" style="width:8rem;">Update</button>
            </div>
            <div class="col-md-3 d-grid">
                <button class="btn btn-warning fw-bold" type="reset" style="width:8rem;">Clear</button>
            </div>
            <div class="col-md-3 d-grid">
                <a class="btn btn-primary fw-bold" href="/Administration/ManageRooms" style="width:8rem;">Back</a>
            </div>
        </div>
    </div>
</form>

<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 90%;
		font-weight: bold;
		height: fit-content;
	}

	.inp {
		margin-left: 3rem;
	}
</style>
@inject HttpClient http;
@inject NavigationManager navManager;
@code {
	[Parameter]
	public Guid? Id { get; set; }
	public JsonNode Errors { get; set; } = new JsonObject();
	public ManageRooms? ManageRooms { get; set; }
	public RoomsDto? RoomsDtos { get; set; } = new();
	public Rooms? Rooms { get; set; } = new();

	protected override async Task OnParametersSetAsync()
	{
		try
		{

			Rooms = await http.GetFromJsonAsync<Rooms>($"https://localhost:4000/api/Rooms/{Id}");
			RoomsDtos.RoomId = Rooms?.RoomId ?? "";
			RoomsDtos.RoomType = Rooms?.RoomType ?? "";
			RoomsDtos.RoomStatus = Rooms?.RoomStatus ?? "";
			RoomsDtos.RoomDisplayTitle = Rooms?.RoomDisplayTitle ?? "";
			RoomsDtos.RoomFloor = Rooms?.RoomFloor ?? "";
			RoomsDtos.AdditionalDetails = Rooms?.AdditionalDetails ?? "";
			RoomsDtos.MaximumOccupancy = Rooms?.MaximumOccupancy ?? 0;
			RoomsDtos.MaintainStatus = Rooms?.MaintainStatus ?? "";
			RoomsDtos.LastCleanedBy = Rooms?.LastCleanedBy ?? "";
			RoomsDtos.LastCleanedDate = Rooms?.LastCleanedDate ?? DateTime.Today;
			RoomsDtos.MaintenanceComment = Rooms?.MaintenanceComment ?? "";
            StateHasChanged();
			Console.WriteLine("Succusfull Loading...");
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exceptions : " + ex.StackTrace);
		}
	}
	private async Task UpdateRooms(MouseEventArgs args)
	{
		try
		{
			var response = await http.PutAsJsonAsync(
				$"https://localhost:4000/api/Rooms/{Id}", RoomsDtos);

			if (response.IsSuccessStatusCode)
			{
				navManager.NavigateTo("/Administration/ManageRooms");
                StateHasChanged();
			}
			else
			{
				var strResponse = await response.Content.ReadAsStringAsync();
				Console.WriteLine("Update failed: " + strResponse);

				try
				{
					var jsonResponse = JsonNode.Parse(strResponse);
					Errors = jsonResponse?["errors"] ?? new JsonObject();
				}
				catch
				{
					Errors = new JsonObject();
				}
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exception: " + ex.Message);
		}
	}

}
