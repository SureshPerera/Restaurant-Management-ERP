@page "/Administration/ManageRooms"
@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageRooms
@using ResortManagementApp.Pages.ComponentCss
@layout MainLayout

<div>
	<h3 class="mb-3 text-center">Manage Rooms</h3>
</div>
<div>
	<div>
		<div>
			<div>
				<a href="/Administration/ManageRooms/Create" class="btn btn-primary mb-3">Add New Room</a>
			</div>
			<div>
				<a href="/Administration" class="btn btn-primary mb-3">Back</a>
			</div>
		</div>
		<div>
			@if (Roomss == null)
			{
				<Searching/>
			}
			<table class="table">
				<thead class="bg-light">
					<tr class="table">
						<td>Room Id</td>
						<td>Room Types</td>
						<td>Room Floor</td>
						<td>Room Status</td>
						<td>Maintanance</td>
						<td>Actions</td>

					</tr>
				</thead>
				<tbody class="bg-light">
					@if (Roomss == null)
					{
						<Searching />
					}
					@foreach (var item in Roomss!)
					{
						<tr>
							<th>@(item.RoomId)</th>
							<th>@item.RoomType</th>
							<th>@item.RoomFloor</th>
							<th>@item.RoomStatus</th>
							<th>@item.MaintainStatus</th>
							<th style="white-space:nowrap">
								<a class="btn btn-primary btn-sm" href="/Administration/ManageRooms/Edit/@item.Id">Edit</a>
								<a class="btn btn-danger btn-sm" href="/Administration/ManageRooms/Delete/@item.Id">Delete</a>
							</th>

						</tr>
					}
				</tbody>

			</table>
		</div>
	</div>
</div>
@inject HttpClient Http
@code {
	private List<Rooms>? Roomss { get; set; } = new List<Rooms>();

	protected override async Task OnInitializedAsync()
	{
		Roomss = await Http.GetFromJsonAsync<List<Rooms>>("https://localhost:4000/api/Rooms");
		StateHasChanged();
	}


}
