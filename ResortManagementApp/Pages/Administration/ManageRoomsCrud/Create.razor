@page "/Administration/ManageRooms/Create"

@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageRooms
@using ResortManagementApp.Models.Reservation.DTO
@using ResortManagementApp.Models.Reservation
@using System.Text.Json.Nodes
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout
<div class="container">
	<div class="row justify-content-center">
		<div class="col-lg-8">
			<!-- Card -->
			<div class="card shadow-lg">
				<div class="card-header bg-primary text-center text-white">
					<h3>Add New Room</h3>
				</div>

				<div class="card-body" style="background-color: #F8F9FA; font-size: 15px;">
					@if (RoomsDtos == null)
					{
						<p><Searching /></p>
					}
					else
					{
						<form class="row g-3">
							<!-- Left Column -->
							<div class="col-md-6">
								<div class="mb-3">
									<label class="form-label">Room Id</label>
									<input class="form-control" type="text" @bind="RoomsDtos.RoomId" />
									<span class="text-danger">@Errors["RoomId"]?[0]</span>
								</div>

								<div class="mb-3">
									<label class="form-label">Room Type</label>
									<input class="form-control" type="text" @bind="RoomsDtos.RoomType" />
									<span class="text-danger">@Errors["RoomType"]?[0]</span>
								</div>

								<div class="mb-3">
									<label class="form-label">Room Floor</label>
									<input class="form-control" type="number" @bind="RoomsDtos.RoomFloor" />
									<span class="text-danger">@Errors["RoomFloor"]?[0]</span>
								</div>

								<div class="mb-3">
									<label class="form-label">Room Status</label>
									<textarea class="form-control" @bind="RoomsDtos.RoomStatus"></textarea>
									<span class="text-danger">@Errors["RoomStatus"]?[0]</span>
								</div>

								<div class="mb-3">
									<label class="form-label">Maintain Status</label>
									<input class="form-control" type="text" @bind="RoomsDtos.MaintainStatus" />
									<span class="text-danger">@Errors["MaintainStatus"]?[0]</span>
								</div>

								<div class="mb-3">
									<label class="form-label">Maximum Occupancy</label>
									<input class="form-control" type="number" @bind="RoomsDtos.MaximumOccupancy" />
									<span class="text-danger">@Errors["MaximumOccupancy"]?[0]</span>
								</div>
							</div>

							<!-- Right Column -->
							<div class="col-md-6">
								<div class="mb-3">
									<label class="form-label">Last Cleaned Date</label>
									<input class="form-control" type="date" @bind="RoomsDtos.LastCleanedDate" />
									<span class="text-danger">@Errors["LastCleanedDate"]?[0]</span>
								</div>

								<div class="mb-3">
									<label class="form-label">Last Cleaned By</label>
									<input class="form-control" type="text" @bind="RoomsDtos.LastCleanedBy" />
								</div>

								<div class="mb-3">
									<label class="form-label">Maintenance Comment</label>
									<input class="form-control" type="text" @bind="RoomsDtos.MaintenanceComment" />
									<span class="text-danger">@Errors["MaintenanceComment"]?[0]</span>
								</div>

								<div class="mb-3">
									<label class="form-label">Additional Details</label>
									<input class="form-control" type="text" @bind="RoomsDtos.AdditionalDetails" />
								</div>

								<div class="mb-3">
									<label class="form-label">Room Display Title</label>
									<textarea class="form-control" @bind="RoomsDtos.RoomDisplayTitle"></textarea>
								</div>
							</div>

							<!-- Buttons -->
							<div class="col-12 d-flex justify-content-center mt-4 gap-3">
								<button class="btn btn-success fw-bold" type="button" @onclick="CreateRoom">Add</button>
								<button class="btn btn-warning fw-bold" type="reset">Clear</button>
								<a class="btn btn-primary fw-bold" href="/Administration/ManageRooms">Back</a>
							</div>
						</form>
					}
				</div>
			</div>
		</div>
	</div>
</div>




<style>
	.form {
	  display: flex;
	  flex-direction: column;
	  background-color:transparent;
	  color:black;
	  width:80%;
	  font-weight: bold;
	  height: fit-content;
	}
	.inp{
		margin-left:3rem;
	}
</style>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	public JsonNode Errors { get; set; } = new JsonObject();
	public Rooms? Rooms { get; set; } = new();
	public RoomsDto RoomsDtos { get; set; } = new();

	private async Task CreateRoom(MouseEventArgs args)
	{
		try
		{
			var response = await http.PostAsJsonAsync("https://localhost:4000/api/Rooms", RoomsDtos);

			if (response.IsSuccessStatusCode) { navManager.NavigateTo("/Administration/ManageRooms"); StateHasChanged(); }

			var strResponce = await response.Content.ReadAsStringAsync();
			Console.WriteLine("Json Response :" + strResponce);

			try
			{
				var jsonResponce = JsonNode.Parse(strResponce);
				Errors = jsonResponce?["errors"] ?? new JsonObject();
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
			}
		}catch(Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
		
	}
}

