@page "/Administration/ManageRooms/Delete/{Id:guid}"
@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageRooms
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout

<div>
	<h3 class="mb-3">Delete customer</h3>
	@if (RoomsDtos == null)
	{
		<Searching/>
	}
	<p>are you sure you want to delete customer with name  <strong>@Id</strong> </p>

	<button class="btn btn-danger" @onclick="deleteRooms">Delete</button>
	<a class="btn btn-secondary" href="/Administration/ManageRooms">Cancel</a>
</div>
@inject HttpClient http;
@inject NavigationManager navManager;
@code {
	[Parameter]
	public Guid? Id { get; set; }
	public ManageRooms? ManageRooms { get; set; }
	public RoomsDto? RoomsDtos { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		try
		{
			// Fetch the customer's info by ID
			RoomsDtos = await http.GetFromJsonAsync<RoomsDto>($"https://localhost:4000/api/Rooms/{Id}");

		}
		catch (Exception ex)
		{
			Console.WriteLine("Error loading customer: " + ex.Message);
		}
	}
	private async Task deleteRooms(MouseEventArgs args)
	{
		try
		{
			try
			{
				var responce = await http.DeleteFromJsonAsync<RoomsDto>($"https://localhost:4000/api/Rooms/{Id}");

				navManager.NavigateTo("/Administration/ManageRooms");
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
			}
			
		}
		catch (Exception ex)
		{
			Console.WriteLine("Erro : " + ex.Message);
		}
	}
}
