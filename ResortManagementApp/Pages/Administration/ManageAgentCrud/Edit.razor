@page "/Administration/ManageAgent/Edit/{Id:guid}"
@using System.Text.Json.Nodes
@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageAgents
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Card -->
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-center text-white">
                    <h3>Update Agent Details</h3>
                </div>

                <div class="card-body" style="background-color: #F8F9FA; font-size: 15px;">
                    @if (AgentModelDto == null)
                    {
                        <p><Searching /></p>
                    }
                    else
                    {
                        <form>
                            <div class="row">
                                <!-- Left Column -->
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Agent Name</label>
                                        <input class="form-control" type="text" @bind="AgentModelDto.AgentName" />
                                        <span class="text-danger">@Errors["AgentName"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Agent Address</label>
                                        <textarea class="form-control" @bind="AgentModelDto.AgentAddress"></textarea>
                                        <span class="text-danger">@Errors["AgentAddress"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Contact Person</label>
                                        <input class="form-control" type="text" @bind="AgentModelDto.ContactPerson" />
                                        <span class="text-danger">@Errors["ContactPerson"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Mobile</label>
                                        <input class="form-control" type="number" @bind="AgentModelDto.Mobile" />
                                        <span class="text-danger">@Errors["Mobile"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Fax</label>
                                        <input class="form-control" type="number" @bind="AgentModelDto.Fax" />
                                        <span class="text-danger">@Errors["Fax"]?[0]</span>
                                    </div>
                                </div>

                                <!-- Right Column -->
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">NIC</label>
                                        <input class="form-control" type="text" @bind="AgentModelDto.NIC" />
                                        <span class="text-danger">@Errors["NIC"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Email</label>
                                        <input class="form-control" type="email" @bind="AgentModelDto.Email" />
                                        <span class="text-danger">@Errors["Email"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Website</label>
                                        <input class="form-control" type="text" @bind="AgentModelDto.WebSite" />
                                        <span class="text-danger">@Errors["WebSite"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Credit Limit</label>
                                        <input class="form-control" type="number" @bind="AgentModelDto.CreditLimit" />
                                        <span class="text-danger">@Errors["CreditLimit"]?[0]</span>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">VAT Reg No</label>
                                        <input class="form-control" type="text" @bind="AgentModelDto.VatRegNo" />
                                        <span class="text-danger">@Errors["VatRegNo"]?[0]</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-grid d-md-flex justify-content-md-center mt-4 gap-2">
                                <button class="btn btn-success fw-bold" type="button" @onclick="CreatePackage">
                                    Update
                                </button>
                                <button class="btn btn-warning fw-bold" type="reset">
                                    Clear
                                </button>
                                <a class="btn btn-secondary fw-bold" href="/Administration/ManageAgents">
                                    Back
                                </a>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>




<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 80%;
		font-weight: bold;
		height: fit-content;
	}

	.inp {
		margin-left: 3rem;
	}
</style>



@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid Id { get; set; }
	public JsonNode Errors { get; set; } = new JsonObject();
	public Agents? Agents { get; set; } = new Agents();
	public AgentModelDto? AgentModelDto { get; set; } = new();
	
	protected override async Task OnParametersSetAsync()
	{
		try
		{

			Agents = await http.GetFromJsonAsync<Agents>($"https://localhost:4000/api/Agent/{Id}");
			AgentModelDto.AgentName = Agents?.AgentName?? "";
			AgentModelDto.AgentAddress = Agents?.AgentAddress ?? "";
			AgentModelDto.ContactPerson = Agents?.ContactPerson ?? "";
			AgentModelDto.Email = Agents?.Email?? "";
			AgentModelDto.CreditLimit = Agents?.CreditLimit ?? 0;
			AgentModelDto.Fax = Agents?.Fax ?? "";
			AgentModelDto.Mobile = Agents?.Mobile ?? "";
			AgentModelDto.WebSite = Agents?.WebSite ?? "";
			AgentModelDto.NIC = Agents?.NIC ?? "";
			AgentModelDto.VatRegNo = Agents?.VatRegNo ?? "";
            StateHasChanged();
			Console.WriteLine("Succusfull Loading...");
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exceptions : " + ex.StackTrace);
		}
	}
	private async Task CreatePackage(MouseEventArgs args)
	{
		try
		{
			var response = await http.PutAsJsonAsync(
				$"https://localhost:4000/api/Agent/{Id}", AgentModelDto);

			if (response.IsSuccessStatusCode)
			{
				navManager.NavigateTo("/Administration/ManageAgents");
                StateHasChanged();

			}
			else
			{
				var strResponse = await response.Content.ReadAsStringAsync();
				Console.WriteLine("Update failed: " + strResponse);

				try
				{
					var jsonResponse = JsonNode.Parse(strResponse);
					Errors = jsonResponse?["errors"] ?? new JsonObject();
				}
				catch
				{
					Errors = new JsonObject();
				}
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exception: " + ex.Message);
		}
	}
}


