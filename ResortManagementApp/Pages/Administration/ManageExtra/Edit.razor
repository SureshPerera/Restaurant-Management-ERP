@page "/Administration/ManageExtra/Edit/{Id:guid}"


@using System.Text.Json.Nodes
@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageExRates
@using ResortManagementApp.Models.Administration.ManageExtra
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout
<div>
	<h3 class="card mb-3 text-center">Update Extra Chargers </h3>
</div>


<form class="form flex-wrap" style="  background-color:antiquewhite; margin-left: 0.5rem;">
	@if (ExtraChargersDtos == null)
	{
		<p><Searching /></p>
	}
	
	<div class="justify-content-around flex flex-wrap">
		<div class="">
			<div class="row mb-3">
				<label class="col-md-6 col-form-label">Charge Id</label>
				<div class="col-md-6" style="background-color:antiquewhite">
					<input class="form-control" type="text" @bind="@Id" readonly>
					<span class="text-danger">@Errors["PackageId"]?[0]</span>
				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-6 col-form-label">Extra Charge Type</label>
				<div class="col-md-6" style="background-color:antiquewhite">
					<select class="form-control" @bind="ExtraChargersDtos.ExtraChargeType">
						<option>---Select--</option>
						@foreach (var item in ExtraChargeTypes)
						{
							<option>@item</option>
						}
					</select>

					<span class="text-danger">@Errors["ExtraChargeType"]?[0]</span>
				</div>
			</div>
			<div class="row mb-3">
				<label class="col-md-6 col-form-label">Rate(USD)</label>
				<div class="col-md-6">
					<input class="form-control" type="number" @bind="ExtraChargersDtos.RateUSD">
					<span class="text-danger">@Errors["RateUSD"]?[0]</span>
				</div>
			</div>
			<div class="row mb-3">
				<label style="" class="col-md-6 col-form-label">Rate(LKR)</label>
				<div class="col-md-6">
					<input class="form-control" type="number" @bind="ExtraChargersDtos.RateLKR">
					<span class="text-danger">@Errors["RateLKR"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label style="" class="col-md-6 col-form-label">Comment</label>
				<div class="col-md-6">
					<input class="form-control" type="text" @bind="ExtraChargersDtos.Comment">
					<span class="text-danger">@Errors["Comment"]?[0]</span>

				</div>
			</div>
			<div class="row mb-3">
				<label style="" class="col-md-6 col-form-label">
					Total Amount
				</label>
				<div class="col-md-6">
					@if (ExtraChargersDtos.ExtraChargeType is not null)
					{
						if (ExtraChargersDtos.RateUSD > 0)
						{
							<input class="form-control" type="text" @bind="ExtraChargersDtos.RateUSD" readonly>

						}
						else
						{
							<input class="form-control" type="text" @bind="ExtraChargersDtos.RateLKR" readonly>

						}

					}
					<span class="text-danger">@Errors["Comment"]?[0]</span>

				</div>
			</div>


		</div>
		<div class="" style="display:flex; flex-direction: column; gap: 1rem;">

			<div class="offset-md-1 col-md-3 d-grid" style="">
				<button class="btn btn-success fw-bold" style="width:8rem;" type="button" @onclick="CreateExchangeRate">Add</button>
			</div>
			<div class="offset-md-1 col-md-3 d-grid">
				<button class="btn btn-warning fw-bold" style="width:8rem;" type="reset">Clear</button>
			</div>
			<div class="offset-md-1 col-md-3 d-grid">
				<a class="btn btn-primary fw-bold" style="width:8rem;" href="/Administration/ManageExtra">Back</a>
			</div>
		</div>
	</div>




</form>



<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 80%;
		font-weight: bold;
		height: fit-content;
	}

	.inp {
		margin-left: 3rem;
	}
</style>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid Id { get; set; }
	public JsonNode Errors { get; set; } = new JsonObject();
	public ExtraChanrgers? ExtraChargers { get; set; }
	public ExtraChargersDto? ExtraChargersDtos { get; set; } = new();

	public List<string>? ExtraChargeTypes { get; set; } = new List<string>
	{
		"Early Check In", "City Tour", "Pool Tickets", "Pool Table(45 Min)", "Pre Shoot(Weddings)","Cockage-Foreiger",
		"Cockage-Local","Ladies Dress","Ladies Blouse","Bathmate Replacement", "White wine 187.5ml Mini Bar" , "Red wine 187.5ml Mini Bar",
		"Coca Cola Mini Bar", "Sprite Mini Bar", "Laundry Charges", "Day Outing Package","Extra Person FB", "Extra Person HB",
		"Extra Person BB", "Extra BB Adult", "Extra Kid BB", "Extra Kid HB", "Changing Rooms", "Soda Mini Bar", "Extra Kid BB",
		"Mineral Water 1L Min Bar", "Jambo Peanut Min Bar", "Chocolate(Mass Bar)Mini Bar","Leadies Skirt","Leadies Brassier",
		"Leadies Panties","Leadies Shorts", "Leadies Slack", "Leadies Lungi/Sarong", "Ladies Night Gown", "Leadies T-Shirt",
		"Leadies Vest", "Leadies Under Skirt","Leadies Abaya", "Leadies Socks","Gents Shirt","Gents Trouser","Gents Jacket",
		"Gents Pyjamas/Sarong", "Gents Undershirt", "Gents Under Pants", "Gents Handkerchief", "Gents Socks","Gents Shorts",
		"Gents T-Shirts", "Gents Kurutha Suit", "Children Handkerchief", "Children Shorts", "Children T-Shirt","Children Shorts",
		"Children Frock", "Children Pyjamas Suit", "Children Underwear", "Children Socks", "Children Panty", "Children Skirt",
		"Children Cap"
	};
	protected override async Task OnParametersSetAsync()
	{
		try
		{

			ExtraChargers = await http.GetFromJsonAsync<ExtraChanrgers>($"https://localhost:4000/api/ExtraCharge/{Id}");
			
			ExtraChargersDtos.RateLKR = ExtraChargers?.RateLKR?? 0;
			ExtraChargersDtos.RateUSD = ExtraChargers?.RateUSD?? 0;
			ExtraChargersDtos.Details = ExtraChargers?.Details?? "";
			ExtraChargersDtos.Amount = ExtraChargers?.Amount?? 0;
			ExtraChargersDtos.Comment = ExtraChargers?.Comment?? "";
			ExtraChargersDtos.ExtraChargeType = ExtraChargers?.ExtraChargeType ?? "";
		
			Console.WriteLine("Succusfull Loading...");
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exceptions : " + ex.StackTrace);
		}
	}
	private async Task CreateExchangeRate(MouseEventArgs args)
	{

		try
		{
			var response = await http.PutAsJsonAsync(
				$"https://localhost:4000/api/ExtraCharge/{Id}", ExtraChargersDtos);

			if (response.IsSuccessStatusCode)
			{
				navManager.NavigateTo("/Administration/ManageExtra");
			}
			else
			{
				var strResponse = await response.Content.ReadAsStringAsync();
				Console.WriteLine("Update failed: " + strResponse);

				try
				{
					var jsonResponse = JsonNode.Parse(strResponse);
					Errors = jsonResponse?["errors"] ?? new JsonObject();
				}
				catch
				{
					Errors = new JsonObject();
				}
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine("Exception: " + ex.Message);
		}
	}
}

