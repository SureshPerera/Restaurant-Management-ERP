@page "/Administration/ManageExtra/Delete/{Id:guid}"
@using ResortManagementApp.Models.Administration.DTOS
@using ResortManagementApp.Models.Administration.ManageAgents
@using ResortManagementApp.Models.Administration.ManageExtra
@using ResortManagementApp.Models.Administration.ManagePackages
@using ResortManagementApp.Models.Administration.ManageRooms
@using ResortManagementApp.Pages.ComponentCss

@layout MainLayout

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <!-- Card -->
            <div class="card shadow-lg">
                <div class="card-header bg-danger text-center text-white">
                    <h3>Delete Extra Charge</h3>
                </div>

                <div class="card-body" style="background-color: #F8F9FA; font-size: 15px;">
                    @if (ExtraChargersDto == null)
                    {
                        <p><Searching /></p>
                    }
                    else
                    {
                        <p>
                            Are you sure you want to delete this extra charge with Id
                            <strong>@Id</strong>?
                        </p>

                        <div class="d-grid d-md-flex justify-content-md-center mt-4 gap-2">
                            <button class="btn btn-danger fw-bold" type="button" @onclick="DeletePackages">
                                Delete
                            </button>
                            <a class="btn btn-secondary fw-bold" href="/Administration/ManageExtra">
                                Cancel
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid Id { get; set; }
	public ExtraChanrgers? ExtraChargers { get; set; }
	public ExtraChargersDto? ExtraChargersDto { get; set; } = new();
	protected override async Task OnInitializedAsync()
	{
		try
		{
			// Fetch the customer's info by ID
			ExtraChargersDto = await http.GetFromJsonAsync<ExtraChargersDto>($"https://localhost:4000/api/ExtraCharge/{Id}");
			StateHasChanged();

		}
		catch (Exception ex)
		{
			Console.WriteLine("Error loading Extra Charge: " + ex.Message);
		}
	}
	private async Task DeletePackages(MouseEventArgs args)
	{
		try
		{
			try
			{
				var responce = await http.DeleteFromJsonAsync<ExtraChargersDto>($"https://localhost:4000/api/ExtraCharge/{Id}");
				if (responce != null)
				{
					navManager.NavigateTo("Administration/ManageExtra");
					StateHasChanged();
				}
				Console.WriteLine("Delete Err : ");
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex.Message);
			}

		}
		catch (Exception ex)
		{
			Console.WriteLine("Error : " + ex.Message);
		}
	}
	

}
