@page "/ClientManagement/Create/{Id:guid}"
@using ResortManagementApp.Models.Reservation.DTO
@using System.Text.Json.Nodes

@layout MainLayout
<div class="card">
	<h3 class="mb-3 text-center">Register Customer</h3>
</div>

<div class="col-lg-8">
	<h1 class="title mb-5">New Customer</h1>
</div>

<form class="form">
	<div class="flex gap-4">
		<div class="row form-group mb-3">
			<label class="col-md-4 col-form-label">First Name</label>
			<div class="col-md-8">
				<input class="form-control" @bind="directBookingDTO.FirstName">
				<span class="text-danger">@Errors["FirstName"]?[0]</span>
			</div>
		</div>
		<div class="row form-group mb-3">
			<label class="col-md-4 col-form-label">Last Name</label>
			<div class="col-md-8">
				<input class="form-control" @bind="directBookingDTO.LastName">

			</div>
		</div>
	</div>
	<div class="row">

		<div class="row mb-3">
			<label class="col-md-2 col-form-label">Address</label>
			<div class="col-md-6">
				<textarea class="form-control" @bind="directBookingDTO.Address"></textarea>
				<span class="text-danger">@Errors["FirstName"]?[0]</span>

			</div>
		</div><div class="row mb-3">
			<label class="col-md-2 col-form-label">Phone Number</label>
			<div class="col-md-6">
				<input class="form-control" type="number" @bind="directBookingDTO.PhoneNumber">
				<span class="text-danger">@Errors["PhoneNumber"]?[0]</span>

			</div>
		</div>
		<div class="row mb-3">
			<label class="col-md-2 col-form-label">Email Address</label>
			<div class="col-md-6">
				<input class="form-control" type="email" @bind="directBookingDTO.EmailAddress">
				<span class="text-danger">@Errors["Address"]?[0]</span>

			</div>
		</div>
		<div class="row mb-3">
			<label class="col-md-2 col-form-label">NIC Number</label>
			<div class="col-md-6">
				<input class="form-control" @bind="directBookingDTO.NIC">
				<span class="text-danger">@Errors["NIC"]?[0]</span>

			</div>
		</div>
		<div class="row mb-3">
			<label class="col-md-2 col-form-label">Date Of Birthday</label>
			<div class="col-md-6">
				<input class="form-control" type="date" @bind="directBookingDTO.DathOfBirth">
			</div>
		</div>
		<div class="row mb-3">
			<label class="col-md-2 col-form-label">Nationality</label>
			<div class="col-md-6">
				<input class="form-control" @bind="directBookingDTO.Nationality">
				<span class="text-danger">@Errors["Nationality"]?[0]</span>

			</div>
		</div>
		<div class="row mb-3">
			<label class="col-md-2 col-form-label">CreditLimit</label>
			<div class="col-md-6">
				<input class="form-control" type="number" @bind="directBookingDTO.CreditLimit">
			</div>
		</div>
		<div class="row mb-3">
			<label class="col-md-2 col-form-label">Remark</label>
			<div class="col-md-6">

				<textarea class="form-control" @bind="directBookingDTO.Remark"></textarea>
			</div>
		</div>
		<div style="margin-top:-20rem;">
			<div class="row gap-2" style="justify-content:right; margin-top:-10rem;">

				<div class="offset-md-4 col-md-4 d-grid">
					<button class="btn btn-success fw-bold" type="button" @onclick="SaveCustomer">Register Customer</button>
				</div>
				<div class="offset-md-4 col-md-4 d-grid">
					<button class="btn btn-warning fw-bold" type="reset">Clear</button>
				</div>
				<div class="offset-md-4 col-md-4 d-grid">
					<a class="btn btn-primary fw-bold" href="/ClientManagement">Back</a>
				</div>
			</div>
		</div>

	</div>
</form>

<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 60rem;
		font-weight: bold;
	}
</style>

@inject HttpClient http
@inject NavigationManager navManager
@code {
	[Parameter]
	public Guid guid { get; set; }
	public DirectBookinDTO directBookingDTO { set; get; } = new();
	public JsonNode Errors { set; get; } = new JsonObject();
	private async Task SaveCustomer(MouseEventArgs args)
	{
		var response = await http.PostAsJsonAsync("https://localhost:4000/api/DirectBooking", directBookingDTO);
		if (response.IsSuccessStatusCode) { navManager.NavigateTo("/Reservations/DirectBooking"); }

		var strResponce = await response.Content.ReadAsStringAsync();
		Console.WriteLine("Json Response :" + strResponce);

		try
		{
			var jsonResponce = JsonNode.Parse(strResponce);
			Errors = jsonResponce?["errors"] ?? new JsonObject();
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
	}
}
