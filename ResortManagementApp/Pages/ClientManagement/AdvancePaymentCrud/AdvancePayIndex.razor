@page "/ClientManagement/AdvancePay/{Id:guid}"
@using ResortManagementApp.Models.ClientManagement.AdvancePay
@using ResortManagementApp.Models.Reservation
@using System.Text.Json.Nodes
@inject HttpClient Http
@inject NavigationManager navManager
@layout MainLayout

<div class="container">
	<div class="row justify-content-center">
		<div class="col-lg-8">
			<!-- Card -->
			<div class="card shadow-lg">
				<div class="card-header bg-success text-center text-white">
					<h3>Advance Payment</h3>
				</div>

				<div class="card-body" style="background-color: #F8F9FA; font-size: 15px;">
					<form class="row g-3">
						<!-- Booking Id -->
						<div class="col-md-6">
							<label class="form-label">Booking Id</label>
							<input class="form-control" @bind="AdvancePayDto.DirectBookingId" readonly />
							<span class="text-danger">@Errors["DirectBookingId"]?[0]</span>
						</div>

						<!-- Paying Amount -->
						<div class="col-md-6">
							<label class="form-label">Paying Amount</label>
							<input type="number" class="form-control" @bind="AdvancePayDto.PayingAmount" />
							<span class="text-danger">@Errors["PayingAmount"]?[0]</span>
						</div>

						<!-- Payment Type -->
						<div class="col-md-6">
							<label class="form-label">Payment Type</label>
							<select class="form-select" @bind="AdvancePayDto.PaymentType">
								<option value="">--Select--</option>
								@foreach (var item in PaymentType)
								{
									<option>@item</option>
								}
							</select>
							<span class="text-danger">@Errors["PaymentType"]?[0]</span>
							<div>
								@if (AdvancePayDto.PaymentType == "Card")
								{
									<div class="col-md-6">
										<label class="form-label">Bank</label>
										<input class="form-control" @bind="AdvancePayDto.BankName" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
									<div class="col-md-6">
										<label class="form-label">Recept Number</label>
										<input class="form-control" @bind="AdvancePayDto.ReceptNo" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
									<div class="col-md-6">
										<label class="form-label">Payment Time</label>
										<input class="form-control" @bind="AdvancePayDto.PaymentTime" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
								}
								else if (AdvancePayDto.PaymentType == "Bank")
								{
									<div class="col-md-6">
										<label class="form-label">Bank</label>
										<input class="form-control" @bind="AdvancePayDto.BankName" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
									<div class="col-md-6">
										<label class="form-label">Branch</label>
										<input class="form-control" @bind="AdvancePayDto.Branch" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
									<div class="col-md-6">
										<label class="form-label">Acc Number</label>
										<input class="form-control" @bind="AdvancePayDto.AccNo" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
								}
								else if (AdvancePayDto.PaymentType == "Cheque")
								{
									<div class="col-md-6">
										<label class="form-label">Bank</label>
										<input class="form-control" @bind="AdvancePayDto.BankName" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
									<div class="col-md-6">
										<label class="form-label">Check No</label>
										<input class="form-control" @bind="AdvancePayDto.CheckNo" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
								}
								else if (AdvancePayDto.PaymentType == "Voucher")
								{
									<div class="col-md-6">
										<label class="form-label">Voucher Number</label>
										<input class="form-control" @bind="AdvancePayDto.VoucherNo" />
										<span class="text-danger">@Errors["OderType"]?[0]</span>
									</div>
								}
							</div>
						</div>

						
						<!-- Order Type -->
						<div class="col-md-6">
							<label class="form-label">Order Type</label>
							<input class="form-control" @bind="AdvancePayDto.OderType" />
							<span class="text-danger">@Errors["OderType"]?[0]</span>
						</div>

						<!-- Order Date -->
						<div class="col-md-6">
							<label class="form-label">Order Date</label>
							<input type="datetime-local" class="form-control" value="@AdvancePayDto.OderDate.ToString("yyyy-MM-ddTHH:mm")" readonly />
							<span class="text-danger">@Errors["OderDate"]?[0]</span>
						</div>

						<!-- Order Details -->
						<div class="col-md-6">
							<label class="form-label">Order Details</label>
							<input class="form-control" @bind="AdvancePayDto.Details" />
							<span class="text-danger">@Errors["Details"]?[0]</span>
						</div>

						<!-- Bank Account No (Conditional) -->
						@if (AdvancePayDto.PaymentType == "Bank")
						{
							<div class="col-md-6">
								<label class="form-label">Bank Account No</label>
								<select class="form-select">
									<option value="">--Select--</option>
									@foreach (var item in BankAccountNos)
									{
										<option>@item</option>
									}
								</select>
							</div>
						}

						<!-- Buttons -->
						<div class="col-12 d-flex justify-content-center mt-3 gap-3">
							<button class="btn btn-success fw-bold" type="button" @onclick="MakePay">Pay</button>
							<a class="btn btn-primary fw-bold" href="/ClientManagement/AdvancePayHistory/@Id">Advance Pay History</a>
							<button class="btn btn-warning fw-bold" type="reset">Clear</button>
							<a class="btn btn-primary fw-bold" href="/ClientManagement">Back</a>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 60rem;
		font-weight: bold;
	}
</style>

@code {
	[Parameter] public Guid Id { get; set; }
	public List<AdvancePay>? AdvancePays { get; set; }
	public AdvancePayDto AdvancePayDto { get; set; } = new();
	public JsonNode Errors { get; set; } = new JsonObject();

	public List<string> PaymentType = new List<string>
	{
		"Cash","Card","Bank","Cheque","Vaucher"
	};

	public List<string> BankAccountNos = new List<string>
	{
		"BOC - 256854751","Peoples - 2513625421874568","HNB - 25364128"
	};

	protected override Task OnInitializedAsync()
	{
		AdvancePayDto.DirectBookingId = this.Id;
		AdvancePayDto.OderDate = DateTime.Now;
		return base.OnInitializedAsync();
	}

	private Task MakePay(MouseEventArgs args)
	{
		throw new NotImplementedException();
	}
}
