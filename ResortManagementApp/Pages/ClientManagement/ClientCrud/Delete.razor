@page "/ClientManagement/Client/Delete/{Id:guid}"
@using ResortManagementApp.Models.ClientManagement.Client
@using ResortManagementApp.Models.Reservation
@using ResortManagementApp.Models.Reservation.DTO
@using ResortManagementApp.Pages.ComponentCss
@layout MainLayout

<div class="card p-3">
	<h3 class="mb-3 text-center">Delete Customer</h3>

	@if (Clients == null)
	{
		<p><em>Loading customer details...</em></p>
	}
	else
	{
		<p>
			Are you sure you want to delete customer with ID
			<strong>@Clients.Id</strong> and Name
			<strong>@Clients.FirstName</strong>?
		</p>

		<div class="d-flex gap-2">
			<button class="btn btn-danger fw-bold" @onclick="DeleteCustomer">Delete</button>
			<a class="btn btn-secondary fw-bold" href="/ClientManagement">Cancel</a>
		</div>
	}
</div>


@inject HttpClient http
@inject NavigationManager navManager


@code {
	[Parameter]
	public Guid Id { get; set; }
	public ClientModel Clients { get; set; } = new();


	// protected override async Task OnInitializedAsync()
	// {
	// 	try
	// 	{
	// 		// Fetch the customer's info by ID
	// 		// directBookingModel = await http.GetFromJsonAsync<DirectBookingModel>($"https://localhost:4000/api/DirectBooking/{Id}");

	// 	}
	// 	catch (Exception ex)
	// 	{
	// 		Console.WriteLine("Error loading customer: " + ex.Message);
	// 	}
	// }


	// public async  Task DeleteCustomer()
	// {
	// 	try
	// 	{
	// 		// var responce = await http.DeleteFromJsonAsync<DirectBookingModel>($"https://localhost:4000/api/DirectBooking/{Id}");
	// 		//directBookingDTO.LastName = responce?.LastName ?? "";
	// 		navManager.NavigateTo("/ClientManagement");
	// 	}
	// 	catch (Exception ex)
	// 	{
	// 		Console.WriteLine("Erro : " + ex.Message);
	// 	}
	// }
	private Task DeleteCustomer(MouseEventArgs args)
	{
		throw new NotImplementedException();
	}
}
