@page "/SmartSelling/Create"

@using System.Text.Json.Nodes
@using ResortManagementApp.Models.SmartSales
@using ResortManagementApp.Models.SmartSales.Dtos
@using ResortManagementApp.Pages.ComponentCss


@layout MainLayout
<div class="card p-3">
    <h3 class="mb-3 text-center">Expenses</h3>

    <form class="form p-3" style="background-color: antiquewhite;">
        @if (SmartSaleDto == null)
        {
            <p><em>Loading expense details...</em></p>
        }
        else
        {
            <!-- Expense Inputs -->
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Sundry Item</label>
                <div class="col-md-6">
                    <input class="form-control" type="text" @bind="SmartSaleDto.SandryItem" />
                    <span class="text-danger">@Errors["SandryItem"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Unit Price</label>
                <div class="col-md-6">
                    <input class="form-control" type="number" @bind="SmartSaleDto.UnitPrice" />
                    <span class="text-danger">@Errors["UnitPrice"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Quantity</label>
                <div class="col-md-6">
                    <input class="form-control" type="number" @bind="SmartSaleDto.Quantity" />
                    <span class="text-danger">@Errors["Quantity"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Total</label>
                <div class="col-md-6">
                    @{
                        var total = SmartSaleDto.Quantity * SmartSaleDto.UnitPrice;
                    }
                    <input class="form-control" type="text" value="@total" readonly />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Remark</label>
                <div class="col-md-6">
                    <input class="form-control" type="text" @bind="SmartSaleDto.Remark" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Discount</label>
                <div class="col-md-6">
                    <input class="form-control" type="number" @bind="SmartSaleDto.Discouunt" placeholder="%" />
                </div>
            </div>

            <!-- Summary Box -->
            <div class="mt-3 p-3" style="background-color: beige; font-weight: bold; border-radius: 1rem;">
                <p><strong>Item Name:</strong> @SmartSaleDto.SandryItem</p>
                <p><strong>Unit Price:</strong> Rs @SmartSaleDto.UnitPrice</p>
                <p><strong>Quantity:</strong> @SmartSaleDto.Quantity</p>
                <p><strong>Sub Total:</strong> Rs @total</p>
                <p><strong>Total Discount:</strong> Rs @SmartSaleDto.Discouunt</p>
                @{
                    var GrandTotal = total - SmartSaleDto.Discouunt;
                    SmartSaleDto.TotalLKR = GrandTotal;
                }
                <p class="text-success" style="font-size: 20px;"><strong>Grand Total: Rs @GrandTotal</strong></p>
            </div>

            <!-- Action Buttons -->
            <div class="d-flex mt-3 gap-2">
                <button class="btn btn-success fw-bold" type="button" @onclick="CreateExpence">Save</button>
                <button class="btn btn-warning fw-bold" type="reset">Clear</button>
                <a class="btn btn-primary fw-bold" href="/SmartSalesBilling">Back</a>
            </div>
        }
    </form>
</div>



<style>
	.form {
		display: flex;
		flex-direction: column;
		background-color: transparent;
		color: black;
		width: 100%;
		font-weight: bold;
		height: fit-content;
	}

	.inp {
		margin-left: 3rem;
	}
</style>

@code {
	public JsonNode Errors { get; set; } = new JsonObject();
	public SmartSale? SmartSale { get; set; }
	public SmartSaleDto SmartSaleDto { get; set; } = new();

	protected override void OnInitialized()
	{
		base.OnInitialized();
	}
	private Task CreateExpence(MouseEventArgs args)
	{
		throw new NotImplementedException();
	}
}
